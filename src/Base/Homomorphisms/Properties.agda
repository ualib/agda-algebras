
{-# OPTIONS --without-K --exact-split --safe #-}

open import Overture using (Signature ; ­ЮЊъ ; ­ЮЊЦ )

module Base.Homomorphisms.Properties {­ЮЉє : Signature ­ЮЊъ ­ЮЊЦ} where

open import Data.Product  using ( _,_ )
open import Function      using ( _Рѕў_ )
open import Level         using ( Level )

open  import Relation.Binary.PropositionalEquality as РЅА
      using ( _РЅА_ ; module РЅА-Reasoning )

open import Overture                           using ( РѕБ_РѕБ ; РѕЦ_РѕЦ )
open import Base.Algebras             {­ЮЉє = ­ЮЉє}  using ( Algebra ; _╠ѓ_ ; Lift-Alg )
open import Base.Homomorphisms.Basic  {­ЮЉє = ­ЮЉє}  using ( hom ; is-homomorphism )

private variable ╬▒ ╬▓ ╬│ ¤Ђ : Level

open РЅА-Reasoning

module _ (­ЮЉе : Algebra ╬▒){­ЮЉЕ : Algebra ╬▓}(­ЮЉф : Algebra ╬│) where

  Рѕў-hom : hom ­ЮЉе ­ЮЉЕ  Рєњ  hom ­ЮЉЕ ­ЮЉф  Рєњ  hom ­ЮЉе ­ЮЉф
  Рѕў-hom (g , ghom) (h , hhom) = h Рѕў g , Goal where

   Goal : Рѕђ ­ЮЉЊ a Рєњ (h Рѕў g)((­ЮЉЊ ╠ѓ ­ЮЉе) a) РЅА (­ЮЉЊ ╠ѓ ­ЮЉф)(h Рѕў g Рѕў a)
   Goal ­ЮЉЊ a =  (h Рѕў g)((­ЮЉЊ ╠ѓ ­ЮЉе) a)  РЅАРЪе РЅА.cong h ( ghom ­ЮЉЊ a )  РЪЕ
               h ((­ЮЉЊ ╠ѓ ­ЮЉЕ)(g Рѕў a))  РЅАРЪе hhom ­ЮЉЊ ( g Рѕў a )       РЪЕ
               (­ЮЉЊ ╠ѓ ­ЮЉф)(h Рѕў g Рѕў a)  Рѕј

  Рѕў-is-hom :  {f : РѕБ ­ЮЉе РѕБ Рєњ РѕБ ­ЮЉЕ РѕБ}{g : РѕБ ­ЮЉЕ РѕБ Рєњ РѕБ ­ЮЉф РѕБ}
   Рєњ          is-homomorphism ­ЮЉе ­ЮЉЕ f Рєњ is-homomorphism ­ЮЉЕ ­ЮЉф g
   Рєњ          is-homomorphism ­ЮЉе ­ЮЉф (g Рѕў f)

  Рѕў-is-hom {f} {g} fhom ghom = РѕЦ Рѕў-hom (f , fhom) (g , ghom) РѕЦ

open Level

Lift-hom :  {­ЮЉе : Algebra ╬▒}(РёЊрхЃ : Level){­ЮЉЕ : Algebra ╬▓} (РёЊрхЄ : Level)
 Рєњ          hom ­ЮЉе ­ЮЉЕ  Рєњ  hom (Lift-Alg ­ЮЉе РёЊрхЃ) (Lift-Alg ­ЮЉЕ РёЊрхЄ)

Lift-hom {­ЮЉе = ­ЮЉе} РёЊрхЃ {­ЮЉЕ} РёЊрхЄ (f , fhom) = lift Рѕў f Рѕў lower , Goal
 where
 lABh : is-homomorphism (Lift-Alg ­ЮЉе РёЊрхЃ) ­ЮЉЕ (f Рѕў lower)
 lABh = Рѕў-is-hom (Lift-Alg ­ЮЉе РёЊрхЃ) ­ЮЉЕ {lower}{f} (╬╗ _ _ Рєњ РЅА.refl) fhom

 Goal : is-homomorphism(Lift-Alg ­ЮЉе РёЊрхЃ)(Lift-Alg ­ЮЉЕ РёЊрхЄ) (lift Рѕў (f Рѕў lower))
 Goal = Рѕў-is-hom  (Lift-Alg ­ЮЉе РёЊрхЃ) (Lift-Alg ­ЮЉЕ РёЊрхЄ)
                  {f Рѕў lower}{lift} lABh ╬╗ _ _ Рєњ РЅА.refl

